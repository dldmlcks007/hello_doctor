package kr.or.ddit.controller;

import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.slf4j.LoggerFactory;
import org.slf4j.Logger;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import kr.or.ddit.dto.ChartFormVO;
import kr.or.ddit.dto.DoctorVO;
import kr.or.ddit.dto.SchedulerVO;
import kr.or.ddit.service.SchedulerService;

@Controller
@RequestMapping("/scheduler")
public class SchedulerController {

	HttpSession session = null;

	@Autowired
	private SchedulerService service;

	private static final Logger log = LoggerFactory.getLogger(SchedulerController.class);

	@RequestMapping("/main")
	@ResponseBody
	public ModelAndView main(HttpServletRequest request, ModelAndView mnv) throws Exception{
		String url = "scheduler/main";
		session = request.getSession();
		DoctorVO doctorLogin = (DoctorVO) session.getAttribute("doctorLogin");
		String dId = doctorLogin.getdId();

		List<ChartFormVO> result = null;
		result = service.TodayMyList(dId);
		mnv.addObject("result",result);
		mnv.setViewName(url);

		return mnv;
	}

	//협진스케줄러 오른쪽
	@RequestMapping(value="/main", method = RequestMethod.GET)
	@ResponseBody
	public List<Map<String, Object>> CooperationScheduler() throws Exception{

		List<Map<String, Object>> list = service.Cooperation();
		System.out.println("스케줄 데이터 :"+list);

		JSONObject jsonObj = new JSONObject();
		JSONArray jsonArr = new JSONArray();
		HashMap<String, Object> hash = new HashMap<String, Object>();

		for(int i=0;i<list.size();i++) {
			hash.put("date", list.get(i).get("ta_date"));
			hash.put("disease", list.get(i).get("ta_name"));
			hash.put("name", list.get(i).get("d_name"));

			jsonObj = new JSONObject(hash);
			jsonArr.add(jsonObj);
		}

		log.info("jsonArrCheck:{}",jsonArr);
		return jsonArr;

	}


	@RequestMapping("/regist")
	public String regist(@RequestBody List<Map<String,Object>> param) throws Exception{
		String url = "scheduler/regist";
		DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",Locale.KOREA);



		return url;
	}
	@RequestMapping("/detailList")
	public String detailList() throws Exception{
		String url = "scheduler/detailList";
		return url;
	}
	@RequestMapping("/detail")
	public String detail() throws Exception{
		String url = "scheduler/detail";
		return url;
	}
	@RequestMapping("/modify")
	public String modify() throws Exception{
		String url = "scheduler/modify";
		return url;
	}

	@RequestMapping("/delete")
	@ResponseBody
	public String delete(@RequestBody List<Map<String,Object>>param) throws Exception{
		DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",Locale.KOREA);

		String url = "scheduler/delete";
		return url;
	}

}
