package kr.or.ddit.service;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import kr.or.ddit.command.CaseRegistCommand;
import kr.or.ddit.command.PageMaker1;
import kr.or.ddit.command.ReplyPagingCommand;
import kr.or.ddit.dao.CaseReplyDAO;
import kr.or.ddit.dao.Case_DAO;
import kr.or.ddit.dao.HistoryDAO;
import kr.or.ddit.dto.CaseFileVO;
import kr.or.ddit.dto.CaseReplyVO;
import kr.or.ddit.dto.CaseVO;
import kr.or.ddit.dto.HistoryVO;
import kr.or.ddit.dto.RecomVO;
import kr.or.ddit.dto.ReplyRecomVO;
import kr.or.ddit.util.MakeFileName;

public class HistoryServiceImpl implements HistoryService{
	private HistoryDAO historyDAO;
	private Case_DAO casedao;
	private CaseReplyDAO replydao;

	public void setHistoryDAO(HistoryDAO historyDAO) {
		this.historyDAO = historyDAO;
	}
	public void setCasedao(Case_DAO casedao) {
		this.casedao = casedao;
	}
	public void setReplydao(CaseReplyDAO replydao) {
		this.replydao = replydao;
	}

	@Override
	public List<HistoryVO> diagnosisHistory(String dId) throws SQLException {
		List<HistoryVO> diagnosis = historyDAO.diagnosisHistory(dId);
		System.out.println("진료히스토리 서비스"+diagnosis.get(0));
		return diagnosis;
	}

	@Override
	public List<HistoryVO> CooperationHistory(String dId) throws SQLException {
		List<HistoryVO> cooperation = historyDAO.CooperationHistory(dId);
		System.out.println("협진히스토리 서비스"+cooperation.get(0));
		return cooperation;
	}

	@Override
	public List<HistoryVO> selectbyMno(String mNo) throws SQLException {
		List<HistoryVO> selectbyMno = historyDAO.selectbyMno(mNo);
		return null;
	}

	@Override
	public List<HistoryVO> selectbyComNo(String comNo) throws SQLException {

		return null;
	}

	@Override
	public List<HistoryVO> alarmList(String dId) throws SQLException {
		List<HistoryVO> alarm = historyDAO.alarmList(dId);
		return alarm;
	}

	@Override
	public List<HistoryVO> NoticeList(String dId) throws SQLException {
		List<HistoryVO> notice = historyDAO.NoticeList(dId);
		return notice;
	}

	@Override
	public List<HistoryVO> sendList(String dId) throws SQLException {
		List<HistoryVO> send = historyDAO.sendList(dId);
		System.out.println("서비스 보내기"+send);
		return send;
	}

	@Override
	public List<HistoryVO> CaseDiscussionList(String dId) throws SQLException {
		List<HistoryVO> alarm = historyDAO.CaseDiscussionList(dId);
		return alarm;
	}

	@Override
	public List<HistoryVO> LikeOrderList(String dId) throws SQLException {
		List<HistoryVO> alarm = historyDAO.LikeOrderList(dId);
		return alarm;
	}


	//공지사항 + 상세보기
	@Override
	public List<HistoryVO> Notice(String dId) throws SQLException {
		List<HistoryVO> notice = historyDAO.Notice(dId);
		return notice;
	}
	@Override
	public HistoryVO selectNotice(String nNo) throws SQLException {
		HistoryVO notice = historyDAO.selectNotice(nNo);
		return notice;
	}
	@Override
	public void readNotice(HashMap<String, Object> map) throws SQLException {
		historyDAO.readNotice(map);
	}
	@Override
	public CaseVO selectCase(String disNo) throws SQLException {
		CaseVO selctCase = casedao.selectCaseByNo(disNo);
		return selctCase;
	}

	@Override
	public RecomVO recomSelect(RecomVO recomvo) throws SQLException {
		RecomVO recom = null;
		recom = casedao.recomSelect(recomvo);
		return recom;
	}
	@Override
	public Map<String, Object> listReply(ReplyPagingCommand command, String disNo, String dId) throws SQLException {
		Map<String, Object> dataMap = new HashMap<String, Object>();
		List<CaseReplyVO> replylist = replydao.listReply(command);

		for(int i = 0; i< replylist.size(); i++) {
			ReplyRecomVO replyRecomVO = new ReplyRecomVO();
			String disRplyNo = replylist.get(i).getDisRplyNo();
			replyRecomVO.setdId(dId);
		    replyRecomVO.setDisRplyNo(disRplyNo);
			String result = replydao.myClick(replyRecomVO);

			if(!result.equals("N")) {
				replylist.get(i).setMyClick("Y");
			}else {
				replylist.get(i).setMyClick(result);
			}
		}
		int count = replydao.countReply(command);
		PageMaker1 pageMaker = new PageMaker1();
		pageMaker.setCommand(command);
		pageMaker.setTotalCount(count);
		dataMap.put("replylist", replylist);
		dataMap.put("pageMaker", pageMaker);
		return dataMap;
	}

	@Override
	public Map<String, Object> detailCase(String disNo) throws SQLException {
		CaseRegistCommand command =  casedao.selectCaseByNo(disNo);

		Map<String, Object> map = new HashMap<String, Object>();
		List<CaseFileVO> list = casedao.selectFile(disNo);
		if(list != null) {

			for(int i = 0; i < list.size(); i++) {
				String fileName = list.get(i).getDisFileName();
				String newName = MakeFileName.parseFileNameFromUUID(fileName, "\\&\\&");
				System.out.println(newName);
				list.get(i).setDisFileName(newName);
			}
		}
		map.put("list", list);
		map.put("command", command);
		System.out.println(map);
		return map;
	}
//	@Override
//	public List<HistoryVO> LogHistory(String dId) throws SQLException {
//		List<HistoryVO> log = historyDAO.LogList(dId);
//		return log;
//	}
}
