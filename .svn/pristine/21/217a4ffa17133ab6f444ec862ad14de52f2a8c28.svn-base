package kr.or.ddit.controller;

import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.ibatis.session.SqlSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.command.SearchCriteria;
import kr.or.ddit.dto.CaseVO;
import kr.or.ddit.dto.RecomVO;
import kr.or.ddit.service.CaseService;

@Controller
@RequestMapping("case")
public class CaseDiscussionController {

	@Autowired
	private CaseService service;

	@RequestMapping("main")
	public ModelAndView main(CaseVO casevo, ModelAndView mnv, String dId) throws Exception{
		String url = "casediscussion/main";
//		List<CaseVO> list = service.selectCase();
//		Map<String, Object> dataMap = service.getCaseListForPage(cri);

		Map<String, Object> dataMap = service.mainBottomShow(casevo);
		dataMap = service.selectMajor(dId);
		mnv.addObject("dataMap", dataMap);
		mnv.setViewName(url);

		return mnv;
	}

	@RequestMapping(value = "regist", method = RequestMethod.POST)
	public String regist(CaseVO casevo, HttpServletRequest request, RedirectAttributes rttr)throws Exception {
		String url ="redirect:/list.do";

		service.insertCase(casevo);
		System.out.println("regist");
		rttr.addFlashAttribute("from", "regist");
		return url;

	}

	@RequestMapping("/registForm")
	public String registForm() {
		String url = "casediscussion/regist";
		System.out.println("registForm");
		return url;
	}


	@RequestMapping("/detail")
	public ModelAndView detail(String disNo, String from, ModelAndView mnv, String d_id)throws SQLException {
		String url ="casediscussion/detail";
		CaseVO casevo = null;
		if(from != null && from.equals("list")) {
			casevo = service.detailCase(disNo);
			url = "redirect:/case/detail.do?disNo="+disNo;
		}else {
			casevo = service.getCaseForModify(disNo);
		}
//		casevo = service.detailCase(dis_no);
		mnv.addObject("casevo", casevo);
		mnv.setViewName(url);


		return mnv;

	}

	@ResponseBody
	@RequestMapping("delete")
	public ResponseEntity<Map<String, String>> delete(@RequestBody Map<String, String> map)throws Exception{
//		String url = "redirect:/casediscussion/list";
		ResponseEntity<Map<String, String>> entity = null;
		entity = new ResponseEntity<Map<String,String>>(map, HttpStatus.CREATED);
		service.deleteCase(map.get("disNo"));
		return entity;
	}

	@RequestMapping("comment")
	public String comment() {
		String url ="casediscussion/comment_regist";

		return url;

	}

	@RequestMapping("/modifyForm")
	public ModelAndView modifyForm(String disNo, ModelAndView mnv)throws SQLException{
		String url = "casediscussion/modify";

		CaseVO casevo = service.getCaseForModify(disNo);
		System.out.println("modifyForm : " + disNo);
		System.out.println(casevo.getDisCnt());
		mnv.addObject("casevo", casevo);
		mnv.setViewName(url);

		return mnv;
	}

	@RequestMapping("modify")
	public String modify(CaseVO casevo, HttpServletRequest request, RedirectAttributes rttr)throws SQLException {
		String url ="redirect:/casediscussion/detail.do";

		service.updateCase(casevo);
		rttr.addFlashAttribute("from", "modify");
		rttr.addAttribute("disNo", casevo.getDisNo());

		return url;

	}

	@RequestMapping(value = "list", method = RequestMethod.GET)
	public ModelAndView list(SearchCriteria cri, ModelAndView mnv) throws Exception{
		String url = "casediscussion/list";

		Map<String, Object> dataMap = service.getCaseListForPage(cri);

		mnv.addObject("dataMap", dataMap);
		mnv.setViewName(url);

		return mnv;
	}

	@RequestMapping("test")
	public String test() {
		String url = "casediscussion/test";
		return url;
	}

	@ResponseBody
	@RequestMapping("like")
	public String like(RecomVO recomvo)throws SQLException{
		String url = "casediscussion/detail";

		service.recomSelect(recomvo);

		return url;
	}

	@ResponseBody
	@RequestMapping("major")
	public String major(String dId)throws SQLException{
		String url = "casediscussion/main";

		service.selectMajor(dId);

		return url;
	}

}
