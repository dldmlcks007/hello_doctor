package kr.or.ddit.dao;

import java.sql.SQLException;
import java.util.List;

import kr.or.ddit.command.SearchCriteria;
import kr.or.ddit.dto.CoDoctorVO;
import kr.or.ddit.dto.CoMedVO;
import kr.or.ddit.dto.NotiVO;

public interface CoMedDAO {


	//검색기능 + 페이징
	int selectSearchCooperationCount(SearchCriteria cri) throws Exception;

	//전체 협진리스트
	List<CoMedVO> selectAll(SearchCriteria cri)throws SQLException;
	//전체 협진 리스트 -> 의료진들
	List<CoMedVO> coopermain_doctors(String coNo)throws SQLException;


	// 사용자의 전공과 일치하는 협진리스트
	List<CoMedVO> myCooperation(String maNo) throws SQLException;
	// 사용자의 전공과 일치하는 협진리스트 ->의료진들
	List<CoMedVO> myCooperation_doctors(String coNo) throws SQLException;


	//진행중인 협진리스트
	List<CoMedVO> proceedingCooperation(SearchCriteria cri)throws SQLException;
	//진행중 협진리스트 -> 의료진들
	List<CoMedVO> proceeding_doctors(String coNo) throws SQLException;
	//사용자의 전공과 일치하는 협진리스트
	List<CoMedVO> myCooperation_proceeding(String maNo) throws SQLException;
	//사용자의 전공과 일치하는 협진리스트 -> 의료진들
	List<CoMedVO> myCooperation_proceedingdoctors(String coNo) throws SQLException;


	//완료된 협진리스트
	List<CoMedVO> completeCooperation(SearchCriteria cri)throws SQLException;
	//완료된 협진리스트 -> 의료진들
	List<CoMedVO> complete_doctors(String coNo) throws SQLException;
	//사용자의 전공과 일치하는 협진리스트
	List<CoMedVO> myCooperation_complete(String maNo) throws SQLException;
	//사용자의 전공과 일치하는 협진리스트 -> 의료진들
	List<CoMedVO> myCooperation_completedoctors(String coNo) throws SQLException;

	//협진 시퀀스 생성
	int getCoSeq()throws SQLException;
	//알림 시퀀스 생성
	int getNotiSeq()throws SQLException;

	//협진 생성
	void registCoMedi(CoMedVO vo)throws SQLException;

	//협진의사 입력
	void registCoDoctor(CoDoctorVO vo)throws SQLException;
	void registNoti(NotiVO vo)throws SQLException;

}
